--- a/net/minecraft/server/TileEntitySign.java
+++ b/net/minecraft/server/TileEntitySign.java
@@ -1,9 +1,10 @@
 package net.minecraft.server;
 
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
+import java.util.UUID;
 import javax.annotation.Nullable;
 
-public class TileEntitySign extends TileEntity {
+public class TileEntitySign extends TileEntity implements ICommandListener { // CraftBukkit - implements
 
     public final IChatBaseComponent[] lines;
     public boolean isEditable;
@@ -29,6 +30,12 @@
             nbttagcompound.setString("Text" + (i + 1), s);
         }
 
+        // CraftBukkit start
+        if (Boolean.getBoolean("convertLegacySigns")) {
+            nbttagcompound.setBoolean("Bukkit.isConverted", true);
+        }
+        // CraftBukkit end
+
         nbttagcompound.setString("Color", this.color.c());
         return nbttagcompound;
     }
@@ -39,18 +46,38 @@
         super.load(iblockdata, nbttagcompound);
         this.color = EnumColor.a(nbttagcompound.getString("Color"), EnumColor.BLACK);
 
+        // CraftBukkit start - Add an option to convert signs correctly
+        // This is done with a flag instead of all the time because
+        // we have no way to tell whether a sign is from 1.7.10 or 1.8
+
+        boolean oldSign = Boolean.getBoolean("convertLegacySigns") && !nbttagcompound.getBoolean("Bukkit.isConverted");
+
         for (int i = 0; i < 4; ++i) {
             String s = nbttagcompound.getString("Text" + (i + 1));
-            IChatMutableComponent ichatmutablecomponent = IChatBaseComponent.ChatSerializer.a(s.isEmpty() ? "\"\"" : s);
+            if (s != null && s.length() > 2048) {
+                s = "\"\"";
+            }
+
+            try {
+                IChatMutableComponent ichatmutablecomponent = IChatBaseComponent.ChatSerializer.a(s.isEmpty() ? "\"\"" : s);
 
-            if (this.world instanceof WorldServer) {
-                try {
-                    this.lines[i] = ChatComponentUtils.filterForDisplay(this.a((EntityPlayer) null), ichatmutablecomponent, (Entity) null, 0);
-                } catch (CommandSyntaxException commandsyntaxexception) {
+                if (oldSign) {
+                    lines[i] = org.bukkit.craftbukkit.util.CraftChatMessage.fromString(s)[0];
+                    continue;
+                }
+                // CraftBukkit end
+
+                if (this.world instanceof WorldServer) {
+                    try {
+                        this.lines[i] = ChatComponentUtils.filterForDisplay(this.a((EntityPlayer) null), ichatmutablecomponent, (Entity) null, 0);
+                    } catch (CommandSyntaxException commandsyntaxexception) {
+                        this.lines[i] = ichatmutablecomponent;
+                    }
+                } else {
                     this.lines[i] = ichatmutablecomponent;
                 }
-            } else {
-                this.lines[i] = ichatmutablecomponent;
+            } catch (com.google.gson.JsonParseException jsonparseexception) {
+                this.lines[i] = new ChatComponentText(s);
             }
 
             this.g[i] = null;
@@ -111,11 +138,37 @@
         return true;
     }
 
+    // CraftBukkit start
+    @Override
+    public void sendMessage(IChatBaseComponent ichatbasecomponent, UUID uuid) {}
+
+    @Override
+    public org.bukkit.command.CommandSender getBukkitSender(CommandListenerWrapper wrapper) {
+        return wrapper.getEntity() != null ? wrapper.getEntity().getBukkitSender(wrapper) : new org.bukkit.craftbukkit.command.CraftBlockCommandSender(wrapper, this);
+    }
+
+    @Override
+    public boolean shouldSendSuccess() {
+        return false;
+    }
+
+    @Override
+    public boolean shouldSendFailure() {
+        return false;
+    }
+
+    @Override
+    public boolean shouldBroadcastCommands() {
+        return false;
+    }
+    // CraftBukkit end
+
     public CommandListenerWrapper a(@Nullable EntityPlayer entityplayer) {
         String s = entityplayer == null ? "Sign" : entityplayer.getDisplayName().getString();
         Object object = entityplayer == null ? new ChatComponentText("Sign") : entityplayer.getScoreboardDisplayName();
 
-        return new CommandListenerWrapper(ICommandListener.DUMMY, Vec3D.a((BaseBlockPosition) this.position), Vec2F.a, (WorldServer) this.world, 2, s, (IChatBaseComponent) object, this.world.getMinecraftServer(), entityplayer);
+        // CraftBukkit - this
+        return new CommandListenerWrapper(this, Vec3D.a((BaseBlockPosition) this.position), Vec2F.a, (WorldServer) this.world, 2, s, (IChatBaseComponent) object, this.world.getMinecraftServer(), entityplayer);
     }
 
     public EnumColor getColor() {
@@ -126,7 +179,7 @@
         if (enumcolor != this.getColor()) {
             this.color = enumcolor;
             this.update();
-            this.world.notify(this.getPosition(), this.getBlock(), this.getBlock(), 3);
+            if (this.world != null) this.world.notify(this.getPosition(), this.getBlock(), this.getBlock(), 3); // CraftBukkit - skip notify if world is null (SPIGOT-5122)
             return true;
         } else {
             return false;
